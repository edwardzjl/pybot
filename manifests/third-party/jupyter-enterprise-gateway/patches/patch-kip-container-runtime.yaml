# As we use containerd as the container runtime, we need to patch the kernel-image-puller DaemonSet to use the correct CRI endpoint.
apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: kernel-image-puller
  namespace: jupyter
spec:
  template:
    spec:
      containers:
      - name: kernel-image-puller
        env:
        - name: KIP_LOG_LEVEL
          value: DEBUG
        - name: KIP_GATEWAY_HOST
          value: "http://enterprise-gateway.jupyter:8888"
        - name: KIP_VALIDATE_CERT
          value: "false"
        - name: KIP_INTERVAL
          value: !!str 300
        - name: KIP_PULL_POLICY
          value: IfNotPresent
        - name: KIP_CRI_ENDPOINT
          value: "unix:///run/containerd/containerd.sock"
        - name: KIP_DEFAULT_CONTAINER_REGISTRY
          value: docker.io
        # Optional authorization token passed in all requests (should match EG_AUTH_TOKEN)
        # fetcher to fetch image names, defaults to KernelSpecsFetcher
        - name: KIP_IMAGE_FETCHER
          value: "KernelSpecsFetcher"
        # if CombinedImagesFetcher is used KIP_INTERNAL_FETCHERS defines the fetchers that get used internally
        # if StaticListFetcher is used KIP_IMAGES defines the list of images pullers will fetch

        volumeMounts:
        - name: cri-socket
          mountPath: !!str /run/containerd/containerd.sock  # see env KIP_CRI_ENDPOINT
          readOnly: true
      volumes:
      - name: cri-socket
        hostPath:
          path: /run/containerd/containerd.sock
